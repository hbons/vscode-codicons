name: Codicons Build

on:
  push:
    branches: [ main ]
    tags:        
      - '*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build font
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: codicon-font-${{ github.sha }}
          path: dist/codicon.ttf

      - name: Pull Request to microsoft/vscode
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH="update-codicons"
          MESSAGE="chore: Update codicons to ${{ github.ref }}"
          USER_NAME="GitHub Actions at microsoft/vscode-codicons"
          USER_EMAIL="hylbo@microsoft.com"

          git clone https://github.com/microsoft/vscode.git
          cd vscode
          git checkout -b $BRANCH

          cp ../dist/codicon.ttf src/vs/base/browser/ui/codicons/codicon/
          cp ../dist/codiconsLibrary.ts src/vs/base/common/

          git add .
          git config user.name "$USER_NAME"
          git config user.email "$USER_EMAIL"
          git commit -m "$MESSAGE"
          git push -f origin $BRANCH

        # echo "${{ secrets.ACCESS_TOKEN }}" > token.txt
        # gh auth login --with-token < token.txt

          gh pr create \
            --title "$MESSAGE" \
            --body "" \
            --base "main" \
            --head "$BRANCH"

  publish:
      runs-on: ubuntu-latest

      steps:
        - name: Write release notes
          if: startsWith(github.ref, 'refs/tags/')
          run: |
            commits=$(git log --pretty=format:"- %h: %s%n  (%H)%n" ${{ github.event.before }}..${{ github.sha }})
            echo "This release includes: ${commits}" > release_notes.txt

        # Create a release when a new tag is pushed. Writes out all new commit messages since the last release.
        - name: Create Release
          if: startsWith(github.ref, 'refs/tags/')
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: false
            prerelease: false
            body: $(cat release_notes.txt)
