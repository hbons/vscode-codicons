name: Codicons Build

on:
  push:
    branches: [ main ]
    tags:        
      - '*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build font
        run: npm run build

<<<<<<< HEAD
<<<<<<< HEAD
      - name: Upload codicon.ttf as artifact
=======
      - name: Upload artifact
>>>>>>> 8f7db72 (build: Bump script versions)
=======
      - name: Upload codicon.ttf as artifact
>>>>>>> 5ce50e4 (build: Use SSH)
        uses: actions/upload-artifact@v4
        with:
          name: codicon-font-${{ github.sha }}
          path: dist/codicon.ttf

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
      - name: PR to microsoft/vscode
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH="update-codicons"
          MESSAGE="chore: Update codicons to ${{ github.sha }}"
          USER_NAME="GitHub Actions at microsoft/vscode-codicons"
          USER_EMAIL="hylbo@microsoft.com"

          git clone --depth=1 https://github.com/microsoft/vscode.git
          cd vscode
          git checkout -b $BRANCH

          cp ../dist/codicon.ttf src/vs/base/browser/ui/codicons/codicon/
          cp ../dist/codiconsLibrary.ts src/vs/base/common/

          git add .
          git config --global user.name "$USER_NAME"
          git config --global user.email "$USER_EMAIL"
          git commit -m "$MESSAGE"
#          git push -f origin $BRANCH

#          echo "${{ secrets.ACCESS_TOKEN }}" > token.txt
#          gh auth login --with-token < token.txt

#          gh pr create \
#            --title "$MESSAGE" \
#            --body "" \
#            --base "main" \
#            --head "$BRANCH"

  publish:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Write release notes
        if: startsWith(github.ref, 'refs/tags/') # Only runs on annotaged tags
        run: | # Get all commits since last tag
          commits=$(git log --pretty=format:"- %h: %s%n  (%H)%n" $(git describe --tags --abbrev=0 @^)..@
          echo "This release includes: ${commits}" > release_notes.txt

      # Create a release when a new tag is pushed. Writes out all new commit messages since the last release
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/') # Only runs on annotaged tags
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: $(cat release_notes.txt)
=======
=======
      - name: Pull Request to microsoft/vscode
=======
      - name: PR to microsoft/vscode
>>>>>>> 6a7eb2b (build: Disable some lines)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH="update-codicons"
          MESSAGE="chore: Update codicons to ${{ github.sha }}"
          USER_NAME="GitHub Actions at microsoft/vscode-codicons"
          USER_EMAIL="hylbo@microsoft.com"

          git clone https://github.com/microsoft/vscode.git
          cd vscode
          git checkout -b $BRANCH

          cp ../dist/codicon.ttf src/vs/base/browser/ui/codicons/codicon/
          cp ../dist/codiconsLibrary.ts src/vs/base/common/

          git add .
          git config --global user.name "$USER_NAME"
          git config --global user.email "$USER_EMAIL"
          git commit -m "$MESSAGE"
#          git push -f origin $BRANCH

#          echo "${{ secrets.ACCESS_TOKEN }}" > token.txt
#          gh auth login --with-token < token.txt

#          gh pr create \
#            --title "$MESSAGE" \
#            --body "" \
#            --base "main" \
#            --head "$BRANCH"

>>>>>>> b2a6286 (build: Add push to vscode)
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Write release notes
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          commits=$(git log --pretty=format:"- %h: %s%n  (%H)%n" ${{ github.event.before }}..${{ github.sha }})
          echo "This release includes: ${commits}" > release_notes.txt

<<<<<<< HEAD
        # Create a release when a new tag is pushed. Writes out all new commit messages since the last release.
        - name: Create Release
          if: startsWith(github.ref, 'refs/tags/')
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: false
            prerelease: false
            body: $(cat release_notes.txt)
<<<<<<< HEAD
  #       run: |
  #         git config --global user.email "actions@github.com"
  #         git config --global user.name "GitHub Actions"
  #         git clone https://github.com/microsoft/vscode.git
  #         cd vscode
  #         git checkout -b update-codonicons
  #         cp -r ../dist/codicon.ttf src/vs/base/browser/ui/codicons/codicon/
  #         git add .
  #         git commit -m "Update codicons to ${{ github.ref }}"
  #         git push origin update-font
  #         # TODO: Create PR
>>>>>>> 80e9a45 (build: Add release action)
=======
>>>>>>> b2a6286 (build: Add push to vscode)
=======
      # Create a release when a new tag is pushed. Writes out all new commit messages since the last release.
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: $(cat release_notes.txt)
>>>>>>> 6da7dbd (Fix indentation)
